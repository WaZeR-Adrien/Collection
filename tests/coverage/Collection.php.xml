<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="Collection.php" path="/">
    <totals>
      <lines total="412" comments="167" code="245" executable="81" executed="81" percent="100.00"/>
      <methods count="25" tested="25" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="AdrienM\Collection\Collection" start="14" executable="81" executed="81" crap="49">
      <package full="" name="" sub="" category=""/>
      <namespace name="AdrienM\Collection"/>
      <method name="__construct" signature="__construct()" start="44" end="48" crap="1" executable="3" executed="3" coverage="100"/>
      <method name="from" signature="from(array $firstItems = []): self" start="55" end="61" crap="1" executable="3" executed="3" coverage="100"/>
      <method name="isEmpty" signature="isEmpty(): bool" start="67" end="70" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="length" signature="length(): int" start="76" end="79" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="sum" signature="sum($key = null): int" start="86" end="105" crap="8" executable="8" executed="8" coverage="100"/>
      <method name="contains" signature="contains($value): bool" start="112" end="115" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="keyExists" signature="keyExists($key): bool" start="122" end="125" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="keys" signature="keys(): array" start="131" end="134" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="add" signature="add($value, $key = null): self" start="144" end="163" crap="3" executable="8" executed="8" coverage="100"/>
      <method name="push" signature="push(Collection $collection): self" start="171" end="180" crap="3" executable="4" executed="4" coverage="100"/>
      <method name="pushOnlyValues" signature="pushOnlyValues(Collection $collection): self" start="188" end="195" crap="2" executable="3" executed="3" coverage="100"/>
      <method name="merge" signature="merge(Collection $collection): self" start="203" end="210" crap="2" executable="3" executed="3" coverage="100"/>
      <method name="replace" signature="replace($key, $value): self" start="220" end="233" crap="2" executable="6" executed="6" coverage="100"/>
      <method name="get" signature="get($key)" start="242" end="253" crap="2" executable="5" executed="5" coverage="100"/>
      <method name="getAll" signature="getAll(): array" start="259" end="262" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getFirst" signature="getFirst()" start="268" end="273" crap="2" executable="2" executed="2" coverage="100"/>
      <method name="getLast" signature="getLast()" start="279" end="282" crap="2" executable="1" executed="1" coverage="100"/>
      <method name="find" signature="find(callable $callback)" start="289" end="298" crap="3" executable="4" executed="4" coverage="100"/>
      <method name="drop" signature="drop($keyOrValue): self" start="307" end="328" crap="5" executable="10" executed="10" coverage="100"/>
      <method name="slice" signature="slice(int $start, int $length = null): self" start="336" end="341" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="purge" signature="purge(): self" start="347" end="352" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="reverse" signature="reverse(): self" start="359" end="362" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="map" signature="map(callable $callback): self" start="370" end="377" crap="1" executable="3" executed="3" coverage="100"/>
      <method name="filter" signature="filter(callable $callback): self" start="385" end="390" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="__call" signature="__call(string $name, array $args)" start="400" end="411" crap="2" executable="5" executed="5" coverage="100"/>
    </class>
    <coverage>
      <line nr="46">
        <covered by="Tests\CollectionTest::testIsEmpty"/>
        <covered by="Tests\CollectionTest::testDrop"/>
        <covered by="Tests\CollectionTest::testLength"/>
        <covered by="Tests\CollectionTest::testSum"/>
        <covered by="Tests\CollectionTest::testSumWithSubValues"/>
        <covered by="Tests\CollectionTest::testContainsValueAndKey"/>
        <covered by="Tests\CollectionTest::testGetKeys"/>
        <covered by="Tests\CollectionTest::testGetAll"/>
        <covered by="Tests\CollectionTest::testGetFirst"/>
        <covered by="Tests\CollectionTest::testNullGetFirst"/>
        <covered by="Tests\CollectionTest::testGetLast"/>
        <covered by="Tests\CollectionTest::testNullGetLast"/>
        <covered by="Tests\CollectionTest::testFind"/>
        <covered by="Tests\CollectionTest::testEdit"/>
        <covered by="Tests\CollectionTest::testPush"/>
        <covered by="Tests\CollectionTest::testPushOnlyValues"/>
        <covered by="Tests\CollectionTest::testMerge"/>
        <covered by="Tests\CollectionTest::testGetValue"/>
        <covered by="Tests\CollectionTest::testSlice"/>
        <covered by="Tests\CollectionTest::testReverse"/>
        <covered by="Tests\CollectionTest::testFilter"/>
        <covered by="Tests\CollectionTest::testMap"/>
        <covered by="Tests\CollectionTest::testGetException"/>
        <covered by="Tests\CollectionTest::testReplaceException"/>
        <covered by="Tests\CollectionTest::testDropException"/>
        <covered by="Tests\CollectionTest::testAddException"/>
        <covered by="Tests\CollectionTest::testUnknownMethodException"/>
      </line>
      <line nr="47">
        <covered by="Tests\CollectionTest::testIsEmpty"/>
        <covered by="Tests\CollectionTest::testDrop"/>
        <covered by="Tests\CollectionTest::testLength"/>
        <covered by="Tests\CollectionTest::testSum"/>
        <covered by="Tests\CollectionTest::testSumWithSubValues"/>
        <covered by="Tests\CollectionTest::testContainsValueAndKey"/>
        <covered by="Tests\CollectionTest::testGetKeys"/>
        <covered by="Tests\CollectionTest::testGetAll"/>
        <covered by="Tests\CollectionTest::testGetFirst"/>
        <covered by="Tests\CollectionTest::testNullGetFirst"/>
        <covered by="Tests\CollectionTest::testGetLast"/>
        <covered by="Tests\CollectionTest::testNullGetLast"/>
        <covered by="Tests\CollectionTest::testFind"/>
        <covered by="Tests\CollectionTest::testEdit"/>
        <covered by="Tests\CollectionTest::testPush"/>
        <covered by="Tests\CollectionTest::testPushOnlyValues"/>
        <covered by="Tests\CollectionTest::testMerge"/>
        <covered by="Tests\CollectionTest::testGetValue"/>
        <covered by="Tests\CollectionTest::testSlice"/>
        <covered by="Tests\CollectionTest::testReverse"/>
        <covered by="Tests\CollectionTest::testFilter"/>
        <covered by="Tests\CollectionTest::testMap"/>
        <covered by="Tests\CollectionTest::testGetException"/>
        <covered by="Tests\CollectionTest::testReplaceException"/>
        <covered by="Tests\CollectionTest::testDropException"/>
        <covered by="Tests\CollectionTest::testAddException"/>
        <covered by="Tests\CollectionTest::testUnknownMethodException"/>
      </line>
      <line nr="48">
        <covered by="Tests\CollectionTest::testIsEmpty"/>
        <covered by="Tests\CollectionTest::testDrop"/>
        <covered by="Tests\CollectionTest::testLength"/>
        <covered by="Tests\CollectionTest::testSum"/>
        <covered by="Tests\CollectionTest::testSumWithSubValues"/>
        <covered by="Tests\CollectionTest::testContainsValueAndKey"/>
        <covered by="Tests\CollectionTest::testGetKeys"/>
        <covered by="Tests\CollectionTest::testGetAll"/>
        <covered by="Tests\CollectionTest::testGetFirst"/>
        <covered by="Tests\CollectionTest::testNullGetFirst"/>
        <covered by="Tests\CollectionTest::testGetLast"/>
        <covered by="Tests\CollectionTest::testNullGetLast"/>
        <covered by="Tests\CollectionTest::testFind"/>
        <covered by="Tests\CollectionTest::testEdit"/>
        <covered by="Tests\CollectionTest::testPush"/>
        <covered by="Tests\CollectionTest::testPushOnlyValues"/>
        <covered by="Tests\CollectionTest::testMerge"/>
        <covered by="Tests\CollectionTest::testGetValue"/>
        <covered by="Tests\CollectionTest::testSlice"/>
        <covered by="Tests\CollectionTest::testReverse"/>
        <covered by="Tests\CollectionTest::testFilter"/>
        <covered by="Tests\CollectionTest::testMap"/>
        <covered by="Tests\CollectionTest::testGetException"/>
        <covered by="Tests\CollectionTest::testReplaceException"/>
        <covered by="Tests\CollectionTest::testDropException"/>
        <covered by="Tests\CollectionTest::testAddException"/>
        <covered by="Tests\CollectionTest::testUnknownMethodException"/>
      </line>
      <line nr="57">
        <covered by="Tests\CollectionTest::testPush"/>
        <covered by="Tests\CollectionTest::testPushOnlyValues"/>
        <covered by="Tests\CollectionTest::testMerge"/>
        <covered by="Tests\CollectionTest::testReverse"/>
        <covered by="Tests\CollectionTest::testFilter"/>
        <covered by="Tests\CollectionTest::testMap"/>
      </line>
      <line nr="58">
        <covered by="Tests\CollectionTest::testPush"/>
        <covered by="Tests\CollectionTest::testPushOnlyValues"/>
        <covered by="Tests\CollectionTest::testMerge"/>
        <covered by="Tests\CollectionTest::testReverse"/>
        <covered by="Tests\CollectionTest::testFilter"/>
        <covered by="Tests\CollectionTest::testMap"/>
      </line>
      <line nr="60">
        <covered by="Tests\CollectionTest::testPush"/>
        <covered by="Tests\CollectionTest::testPushOnlyValues"/>
        <covered by="Tests\CollectionTest::testMerge"/>
        <covered by="Tests\CollectionTest::testReverse"/>
        <covered by="Tests\CollectionTest::testFilter"/>
        <covered by="Tests\CollectionTest::testMap"/>
      </line>
      <line nr="69">
        <covered by="Tests\CollectionTest::testIsEmpty"/>
        <covered by="Tests\CollectionTest::testDrop"/>
        <covered by="Tests\CollectionTest::testLength"/>
        <covered by="Tests\CollectionTest::testSum"/>
        <covered by="Tests\CollectionTest::testSumWithSubValues"/>
        <covered by="Tests\CollectionTest::testContainsValueAndKey"/>
        <covered by="Tests\CollectionTest::testGetKeys"/>
        <covered by="Tests\CollectionTest::testGetAll"/>
        <covered by="Tests\CollectionTest::testGetFirst"/>
        <covered by="Tests\CollectionTest::testNullGetFirst"/>
        <covered by="Tests\CollectionTest::testGetLast"/>
        <covered by="Tests\CollectionTest::testNullGetLast"/>
        <covered by="Tests\CollectionTest::testFind"/>
        <covered by="Tests\CollectionTest::testEdit"/>
        <covered by="Tests\CollectionTest::testPush"/>
        <covered by="Tests\CollectionTest::testPushOnlyValues"/>
        <covered by="Tests\CollectionTest::testMerge"/>
        <covered by="Tests\CollectionTest::testGetValue"/>
        <covered by="Tests\CollectionTest::testSlice"/>
        <covered by="Tests\CollectionTest::testReverse"/>
        <covered by="Tests\CollectionTest::testFilter"/>
        <covered by="Tests\CollectionTest::testMap"/>
        <covered by="Tests\CollectionTest::testGetException"/>
        <covered by="Tests\CollectionTest::testReplaceException"/>
        <covered by="Tests\CollectionTest::testDropException"/>
        <covered by="Tests\CollectionTest::testAddException"/>
        <covered by="Tests\CollectionTest::testUnknownMethodException"/>
      </line>
      <line nr="78">
        <covered by="Tests\CollectionTest::testLength"/>
      </line>
      <line nr="88">
        <covered by="Tests\CollectionTest::testSum"/>
        <covered by="Tests\CollectionTest::testSumWithSubValues"/>
      </line>
      <line nr="90">
        <covered by="Tests\CollectionTest::testSum"/>
        <covered by="Tests\CollectionTest::testSumWithSubValues"/>
      </line>
      <line nr="92">
        <covered by="Tests\CollectionTest::testSum"/>
        <covered by="Tests\CollectionTest::testSumWithSubValues"/>
      </line>
      <line nr="93">
        <covered by="Tests\CollectionTest::testSumWithSubValues"/>
      </line>
      <line nr="95">
        <covered by="Tests\CollectionTest::testSumWithSubValues"/>
      </line>
      <line nr="98">
        <covered by="Tests\CollectionTest::testSum"/>
      </line>
      <line nr="99">
        <covered by="Tests\CollectionTest::testSum"/>
      </line>
      <line nr="104">
        <covered by="Tests\CollectionTest::testSum"/>
        <covered by="Tests\CollectionTest::testSumWithSubValues"/>
      </line>
      <line nr="114">
        <covered by="Tests\CollectionTest::testContainsValueAndKey"/>
      </line>
      <line nr="124">
        <covered by="Tests\CollectionTest::testDrop"/>
        <covered by="Tests\CollectionTest::testLength"/>
        <covered by="Tests\CollectionTest::testContainsValueAndKey"/>
        <covered by="Tests\CollectionTest::testGetKeys"/>
        <covered by="Tests\CollectionTest::testEdit"/>
        <covered by="Tests\CollectionTest::testPush"/>
        <covered by="Tests\CollectionTest::testMerge"/>
        <covered by="Tests\CollectionTest::testGetValue"/>
        <covered by="Tests\CollectionTest::testReverse"/>
        <covered by="Tests\CollectionTest::testMap"/>
        <covered by="Tests\CollectionTest::testGetException"/>
        <covered by="Tests\CollectionTest::testReplaceException"/>
        <covered by="Tests\CollectionTest::testDropException"/>
        <covered by="Tests\CollectionTest::testAddException"/>
      </line>
      <line nr="133">
        <covered by="Tests\CollectionTest::testGetKeys"/>
      </line>
      <line nr="146">
        <covered by="Tests\CollectionTest::testDrop"/>
        <covered by="Tests\CollectionTest::testLength"/>
        <covered by="Tests\CollectionTest::testSum"/>
        <covered by="Tests\CollectionTest::testSumWithSubValues"/>
        <covered by="Tests\CollectionTest::testContainsValueAndKey"/>
        <covered by="Tests\CollectionTest::testGetKeys"/>
        <covered by="Tests\CollectionTest::testGetAll"/>
        <covered by="Tests\CollectionTest::testGetFirst"/>
        <covered by="Tests\CollectionTest::testGetLast"/>
        <covered by="Tests\CollectionTest::testFind"/>
        <covered by="Tests\CollectionTest::testEdit"/>
        <covered by="Tests\CollectionTest::testPush"/>
        <covered by="Tests\CollectionTest::testPushOnlyValues"/>
        <covered by="Tests\CollectionTest::testMerge"/>
        <covered by="Tests\CollectionTest::testGetValue"/>
        <covered by="Tests\CollectionTest::testSlice"/>
        <covered by="Tests\CollectionTest::testReverse"/>
        <covered by="Tests\CollectionTest::testFilter"/>
        <covered by="Tests\CollectionTest::testMap"/>
        <covered by="Tests\CollectionTest::testAddException"/>
      </line>
      <line nr="148">
        <covered by="Tests\CollectionTest::testContainsValueAndKey"/>
        <covered by="Tests\CollectionTest::testGetKeys"/>
        <covered by="Tests\CollectionTest::testPush"/>
        <covered by="Tests\CollectionTest::testMerge"/>
        <covered by="Tests\CollectionTest::testGetValue"/>
        <covered by="Tests\CollectionTest::testReverse"/>
        <covered by="Tests\CollectionTest::testMap"/>
        <covered by="Tests\CollectionTest::testAddException"/>
      </line>
      <line nr="150">
        <covered by="Tests\CollectionTest::testAddException"/>
      </line>
      <line nr="151">
        <covered by="Tests\CollectionTest::testAddException"/>
      </line>
      <line nr="153">
        <covered by="Tests\CollectionTest::testAddException"/>
      </line>
      <line nr="155">
        <covered by="Tests\CollectionTest::testContainsValueAndKey"/>
        <covered by="Tests\CollectionTest::testGetKeys"/>
        <covered by="Tests\CollectionTest::testPush"/>
        <covered by="Tests\CollectionTest::testMerge"/>
        <covered by="Tests\CollectionTest::testGetValue"/>
        <covered by="Tests\CollectionTest::testReverse"/>
        <covered by="Tests\CollectionTest::testMap"/>
        <covered by="Tests\CollectionTest::testAddException"/>
      </line>
      <line nr="159">
        <covered by="Tests\CollectionTest::testDrop"/>
        <covered by="Tests\CollectionTest::testLength"/>
        <covered by="Tests\CollectionTest::testSum"/>
        <covered by="Tests\CollectionTest::testSumWithSubValues"/>
        <covered by="Tests\CollectionTest::testGetAll"/>
        <covered by="Tests\CollectionTest::testGetFirst"/>
        <covered by="Tests\CollectionTest::testGetLast"/>
        <covered by="Tests\CollectionTest::testFind"/>
        <covered by="Tests\CollectionTest::testEdit"/>
        <covered by="Tests\CollectionTest::testPushOnlyValues"/>
        <covered by="Tests\CollectionTest::testGetValue"/>
        <covered by="Tests\CollectionTest::testSlice"/>
        <covered by="Tests\CollectionTest::testFilter"/>
      </line>
      <line nr="162">
        <covered by="Tests\CollectionTest::testDrop"/>
        <covered by="Tests\CollectionTest::testLength"/>
        <covered by="Tests\CollectionTest::testSum"/>
        <covered by="Tests\CollectionTest::testSumWithSubValues"/>
        <covered by="Tests\CollectionTest::testContainsValueAndKey"/>
        <covered by="Tests\CollectionTest::testGetKeys"/>
        <covered by="Tests\CollectionTest::testGetAll"/>
        <covered by="Tests\CollectionTest::testGetFirst"/>
        <covered by="Tests\CollectionTest::testGetLast"/>
        <covered by="Tests\CollectionTest::testFind"/>
        <covered by="Tests\CollectionTest::testEdit"/>
        <covered by="Tests\CollectionTest::testPush"/>
        <covered by="Tests\CollectionTest::testPushOnlyValues"/>
        <covered by="Tests\CollectionTest::testMerge"/>
        <covered by="Tests\CollectionTest::testGetValue"/>
        <covered by="Tests\CollectionTest::testSlice"/>
        <covered by="Tests\CollectionTest::testReverse"/>
        <covered by="Tests\CollectionTest::testFilter"/>
        <covered by="Tests\CollectionTest::testMap"/>
        <covered by="Tests\CollectionTest::testAddException"/>
      </line>
      <line nr="173">
        <covered by="Tests\CollectionTest::testPush"/>
      </line>
      <line nr="174">
        <covered by="Tests\CollectionTest::testPush"/>
      </line>
      <line nr="175">
        <covered by="Tests\CollectionTest::testPush"/>
      </line>
      <line nr="179">
        <covered by="Tests\CollectionTest::testPush"/>
      </line>
      <line nr="190">
        <covered by="Tests\CollectionTest::testPushOnlyValues"/>
      </line>
      <line nr="191">
        <covered by="Tests\CollectionTest::testPushOnlyValues"/>
      </line>
      <line nr="194">
        <covered by="Tests\CollectionTest::testPushOnlyValues"/>
      </line>
      <line nr="205">
        <covered by="Tests\CollectionTest::testMerge"/>
      </line>
      <line nr="206">
        <covered by="Tests\CollectionTest::testMerge"/>
      </line>
      <line nr="209">
        <covered by="Tests\CollectionTest::testMerge"/>
      </line>
      <line nr="222">
        <covered by="Tests\CollectionTest::testEdit"/>
        <covered by="Tests\CollectionTest::testReplaceException"/>
      </line>
      <line nr="223">
        <covered by="Tests\CollectionTest::testEdit"/>
      </line>
      <line nr="226">
        <covered by="Tests\CollectionTest::testReplaceException"/>
      </line>
      <line nr="227">
        <covered by="Tests\CollectionTest::testReplaceException"/>
      </line>
      <line nr="229">
        <covered by="Tests\CollectionTest::testReplaceException"/>
      </line>
      <line nr="232">
        <covered by="Tests\CollectionTest::testEdit"/>
      </line>
      <line nr="244">
        <covered by="Tests\CollectionTest::testGetValue"/>
        <covered by="Tests\CollectionTest::testGetException"/>
      </line>
      <line nr="245">
        <covered by="Tests\CollectionTest::testGetValue"/>
      </line>
      <line nr="248">
        <covered by="Tests\CollectionTest::testGetException"/>
      </line>
      <line nr="249">
        <covered by="Tests\CollectionTest::testGetException"/>
      </line>
      <line nr="251">
        <covered by="Tests\CollectionTest::testGetException"/>
      </line>
      <line nr="261">
        <covered by="Tests\CollectionTest::testDrop"/>
        <covered by="Tests\CollectionTest::testGetAll"/>
        <covered by="Tests\CollectionTest::testFind"/>
        <covered by="Tests\CollectionTest::testPush"/>
        <covered by="Tests\CollectionTest::testPushOnlyValues"/>
        <covered by="Tests\CollectionTest::testMerge"/>
        <covered by="Tests\CollectionTest::testSlice"/>
        <covered by="Tests\CollectionTest::testReverse"/>
        <covered by="Tests\CollectionTest::testFilter"/>
        <covered by="Tests\CollectionTest::testMap"/>
      </line>
      <line nr="270">
        <covered by="Tests\CollectionTest::testGetFirst"/>
        <covered by="Tests\CollectionTest::testNullGetFirst"/>
        <covered by="Tests\CollectionTest::testEdit"/>
      </line>
      <line nr="272">
        <covered by="Tests\CollectionTest::testGetFirst"/>
        <covered by="Tests\CollectionTest::testNullGetFirst"/>
        <covered by="Tests\CollectionTest::testEdit"/>
      </line>
      <line nr="281">
        <covered by="Tests\CollectionTest::testGetLast"/>
        <covered by="Tests\CollectionTest::testNullGetLast"/>
      </line>
      <line nr="291">
        <covered by="Tests\CollectionTest::testFind"/>
      </line>
      <line nr="292">
        <covered by="Tests\CollectionTest::testFind"/>
      </line>
      <line nr="293">
        <covered by="Tests\CollectionTest::testFind"/>
      </line>
      <line nr="297">
        <covered by="Tests\CollectionTest::testFind"/>
      </line>
      <line nr="309">
        <covered by="Tests\CollectionTest::testDrop"/>
        <covered by="Tests\CollectionTest::testLength"/>
        <covered by="Tests\CollectionTest::testDropException"/>
      </line>
      <line nr="310">
        <covered by="Tests\CollectionTest::testDrop"/>
      </line>
      <line nr="311">
        <covered by="Tests\CollectionTest::testDrop"/>
        <covered by="Tests\CollectionTest::testLength"/>
        <covered by="Tests\CollectionTest::testDropException"/>
      </line>
      <line nr="313">
        <covered by="Tests\CollectionTest::testDrop"/>
        <covered by="Tests\CollectionTest::testLength"/>
      </line>
      <line nr="314">
        <covered by="Tests\CollectionTest::testDrop"/>
        <covered by="Tests\CollectionTest::testLength"/>
      </line>
      <line nr="315">
        <covered by="Tests\CollectionTest::testDrop"/>
        <covered by="Tests\CollectionTest::testLength"/>
      </line>
      <line nr="321">
        <covered by="Tests\CollectionTest::testDropException"/>
      </line>
      <line nr="322">
        <covered by="Tests\CollectionTest::testDropException"/>
      </line>
      <line nr="324">
        <covered by="Tests\CollectionTest::testDropException"/>
      </line>
      <line nr="327">
        <covered by="Tests\CollectionTest::testDrop"/>
        <covered by="Tests\CollectionTest::testLength"/>
      </line>
      <line nr="338">
        <covered by="Tests\CollectionTest::testSlice"/>
      </line>
      <line nr="340">
        <covered by="Tests\CollectionTest::testSlice"/>
      </line>
      <line nr="349">
        <covered by="Tests\CollectionTest::testIsEmpty"/>
        <covered by="Tests\CollectionTest::testDrop"/>
        <covered by="Tests\CollectionTest::testLength"/>
        <covered by="Tests\CollectionTest::testSum"/>
        <covered by="Tests\CollectionTest::testSumWithSubValues"/>
        <covered by="Tests\CollectionTest::testContainsValueAndKey"/>
        <covered by="Tests\CollectionTest::testGetKeys"/>
        <covered by="Tests\CollectionTest::testGetAll"/>
        <covered by="Tests\CollectionTest::testGetFirst"/>
        <covered by="Tests\CollectionTest::testNullGetFirst"/>
        <covered by="Tests\CollectionTest::testGetLast"/>
        <covered by="Tests\CollectionTest::testNullGetLast"/>
        <covered by="Tests\CollectionTest::testFind"/>
        <covered by="Tests\CollectionTest::testEdit"/>
        <covered by="Tests\CollectionTest::testPush"/>
        <covered by="Tests\CollectionTest::testPushOnlyValues"/>
        <covered by="Tests\CollectionTest::testMerge"/>
        <covered by="Tests\CollectionTest::testGetValue"/>
        <covered by="Tests\CollectionTest::testSlice"/>
        <covered by="Tests\CollectionTest::testReverse"/>
        <covered by="Tests\CollectionTest::testFilter"/>
        <covered by="Tests\CollectionTest::testMap"/>
        <covered by="Tests\CollectionTest::testGetException"/>
        <covered by="Tests\CollectionTest::testReplaceException"/>
        <covered by="Tests\CollectionTest::testDropException"/>
        <covered by="Tests\CollectionTest::testAddException"/>
        <covered by="Tests\CollectionTest::testUnknownMethodException"/>
      </line>
      <line nr="351">
        <covered by="Tests\CollectionTest::testIsEmpty"/>
        <covered by="Tests\CollectionTest::testDrop"/>
        <covered by="Tests\CollectionTest::testLength"/>
        <covered by="Tests\CollectionTest::testSum"/>
        <covered by="Tests\CollectionTest::testSumWithSubValues"/>
        <covered by="Tests\CollectionTest::testContainsValueAndKey"/>
        <covered by="Tests\CollectionTest::testGetKeys"/>
        <covered by="Tests\CollectionTest::testGetAll"/>
        <covered by="Tests\CollectionTest::testGetFirst"/>
        <covered by="Tests\CollectionTest::testNullGetFirst"/>
        <covered by="Tests\CollectionTest::testGetLast"/>
        <covered by="Tests\CollectionTest::testNullGetLast"/>
        <covered by="Tests\CollectionTest::testFind"/>
        <covered by="Tests\CollectionTest::testEdit"/>
        <covered by="Tests\CollectionTest::testPush"/>
        <covered by="Tests\CollectionTest::testPushOnlyValues"/>
        <covered by="Tests\CollectionTest::testMerge"/>
        <covered by="Tests\CollectionTest::testGetValue"/>
        <covered by="Tests\CollectionTest::testSlice"/>
        <covered by="Tests\CollectionTest::testReverse"/>
        <covered by="Tests\CollectionTest::testFilter"/>
        <covered by="Tests\CollectionTest::testMap"/>
        <covered by="Tests\CollectionTest::testGetException"/>
        <covered by="Tests\CollectionTest::testReplaceException"/>
        <covered by="Tests\CollectionTest::testDropException"/>
        <covered by="Tests\CollectionTest::testAddException"/>
        <covered by="Tests\CollectionTest::testUnknownMethodException"/>
      </line>
      <line nr="361">
        <covered by="Tests\CollectionTest::testReverse"/>
      </line>
      <line nr="372">
        <covered by="Tests\CollectionTest::testMap"/>
      </line>
      <line nr="374">
        <covered by="Tests\CollectionTest::testMap"/>
      </line>
      <line nr="376">
        <covered by="Tests\CollectionTest::testMap"/>
      </line>
      <line nr="387">
        <covered by="Tests\CollectionTest::testFilter"/>
      </line>
      <line nr="389">
        <covered by="Tests\CollectionTest::testFilter"/>
      </line>
      <line nr="402">
        <covered by="Tests\CollectionTest::testGetFirst"/>
        <covered by="Tests\CollectionTest::testNullGetFirst"/>
        <covered by="Tests\CollectionTest::testGetLast"/>
        <covered by="Tests\CollectionTest::testNullGetLast"/>
        <covered by="Tests\CollectionTest::testUnknownMethodException"/>
      </line>
      <line nr="403">
        <covered by="Tests\CollectionTest::testGetFirst"/>
        <covered by="Tests\CollectionTest::testNullGetFirst"/>
        <covered by="Tests\CollectionTest::testGetLast"/>
        <covered by="Tests\CollectionTest::testNullGetLast"/>
      </line>
      <line nr="407">
        <covered by="Tests\CollectionTest::testUnknownMethodException"/>
      </line>
      <line nr="408">
        <covered by="Tests\CollectionTest::testUnknownMethodException"/>
      </line>
      <line nr="410">
        <covered by="Tests\CollectionTest::testUnknownMethodException"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php </token>
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AdrienM</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Collection</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AdrienM</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Logger</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Logger</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="8">
        <token name="T_DOC_COMMENT"> * @method int count()</token>
      </line>
      <line no="9">
        <token name="T_DOC_COMMENT"> * @method int size()</token>
      </line>
      <line no="10">
        <token name="T_DOC_COMMENT"> * @method array all()</token>
      </line>
      <line no="11">
        <token name="T_DOC_COMMENT"> * @method mixed|null first()</token>
      </line>
      <line no="12">
        <token name="T_DOC_COMMENT"> * @method mixed|null last()</token>
      </line>
      <line no="13">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="14">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Collection</token>
      </line>
      <line no="15">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="17">
        <token name="T_DOC_COMMENT">     * Items of the collection</token>
      </line>
      <line no="18">
        <token name="T_DOC_COMMENT">     * @var array&lt;mixed&gt;</token>
      </line>
      <line no="19">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$items</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21"/>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT">     * All alias to call the good method</token>
      </line>
      <line no="24">
        <token name="T_DOC_COMMENT">     * @var array&lt;string&gt;</token>
      </line>
      <line no="25">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$alias</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"count"</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"length"</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"size"</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"length"</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"all"</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"getAll"</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"first"</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"getFirst"</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"last"</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"getLast"</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="29"/>
      <line no="30">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="31">
        <token name="T_DOC_COMMENT">     * The logger</token>
      </line>
      <line no="32">
        <token name="T_DOC_COMMENT">     * @var Logger</token>
      </line>
      <line no="33">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$logger</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="35"/>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="37">
        <token name="T_DOC_COMMENT">     * The type for logger</token>
      </line>
      <line no="38">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">TYPE</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"COLLECTION"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="40"/>
      <line no="41">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="42">
        <token name="T_DOC_COMMENT">     * Collection constructor.</token>
      </line>
      <line no="43">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">logger</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Logger</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">getInstance</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setType</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">TYPE</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="49"/>
      <line no="50">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="51">
        <token name="T_DOC_COMMENT">     * Get instance from array</token>
      </line>
      <line no="52">
        <token name="T_DOC_COMMENT">     * @param array&lt;mixed&gt; $firstItems</token>
      </line>
      <line no="53">
        <token name="T_DOC_COMMENT">     * @return Collection</token>
      </line>
      <line no="54">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">from</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$firstItems</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$collection</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$collection</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$firstItems</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="59"/>
      <line no="60">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$collection</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="62"/>
      <line no="63">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="64">
        <token name="T_DOC_COMMENT">     * Check if the collection is empty</token>
      </line>
      <line no="65">
        <token name="T_DOC_COMMENT">     * @return bool</token>
      </line>
      <line no="66">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">isEmpty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="71"/>
      <line no="72">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="73">
        <token name="T_DOC_COMMENT">     * Get the number of items</token>
      </line>
      <line no="74">
        <token name="T_DOC_COMMENT">     * @return int</token>
      </line>
      <line no="75">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">length</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="80"/>
      <line no="81">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="82">
        <token name="T_DOC_COMMENT">     * Get the sum of values</token>
      </line>
      <line no="83">
        <token name="T_DOC_COMMENT">     * @param string|int|null $key</token>
      </line>
      <line no="84">
        <token name="T_DOC_COMMENT">     * @return int</token>
      </line>
      <line no="85">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sum</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$sum</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="89"/>
      <line no="90">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="91"/>
      <line no="92">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_EQUAL">!=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">                </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$subKey</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$subItem</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="94"/>
      <line no="95">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$subKey</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_int</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$subItem</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$sum</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PLUS_EQUAL">+=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$subItem</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="96"/>
      <line no="97">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_int</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$sum</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PLUS_EQUAL">+=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="101"/>
      <line no="102">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="103"/>
      <line no="104">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$sum</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="106"/>
      <line no="107">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="108">
        <token name="T_DOC_COMMENT">     * Check if the collection contains the value</token>
      </line>
      <line no="109">
        <token name="T_DOC_COMMENT">     * @param mixed $value</token>
      </line>
      <line no="110">
        <token name="T_DOC_COMMENT">     * @return bool</token>
      </line>
      <line no="111">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">contains</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="116"/>
      <line no="117">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="118">
        <token name="T_DOC_COMMENT">     * Check if the key exists in the collection</token>
      </line>
      <line no="119">
        <token name="T_DOC_COMMENT">     * @param string|int $key</token>
      </line>
      <line no="120">
        <token name="T_DOC_COMMENT">     * @return bool</token>
      </line>
      <line no="121">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">keyExists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_key_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="126"/>
      <line no="127">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="128">
        <token name="T_DOC_COMMENT">     * Get all keys</token>
      </line>
      <line no="129">
        <token name="T_DOC_COMMENT">     * @return array&lt;string|int&gt;</token>
      </line>
      <line no="130">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="131">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">keys</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="132">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="133">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_keys</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="134">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="135"/>
      <line no="136">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="137">
        <token name="T_DOC_COMMENT">     * Add a new value in the collection with or without key</token>
      </line>
      <line no="138">
        <token name="T_DOC_COMMENT">     * @param mixed $value</token>
      </line>
      <line no="139">
        <token name="T_DOC_COMMENT">     * @param string|int|null $key</token>
      </line>
      <line no="140">
        <token name="T_DOC_COMMENT">     * @return Collection</token>
      </line>
      <line no="141">
        <token name="T_DOC_COMMENT">     * @throws CollectionException</token>
      </line>
      <line no="142">
        <token name="T_DOC_COMMENT">     * @throws \AdrienM\Logger\LogException</token>
      </line>
      <line no="143">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="144">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">add</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="145">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="146">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">null</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_EQUAL">!=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="147"/>
      <line no="148">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">keyExists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="149">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">// Register log</token>
      </line>
      <line no="150">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setLevel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Logger</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">LOG_ERROR</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="151">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">write</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">Key </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> already added. Code : </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CollectionException</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">KEY_ALREADY_ADDED</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="152"/>
      <line no="153">
        <token name="T_WHITESPACE">                </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CollectionException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">Key </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> already added.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CollectionException</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">KEY_ALREADY_ADDED</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="154">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="155">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="156">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="157"/>
      <line no="158">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="159">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="160">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="161"/>
      <line no="162">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="163">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="164"/>
      <line no="165">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="166">
        <token name="T_DOC_COMMENT">     * Push items of the parameter collection in this collection</token>
      </line>
      <line no="167">
        <token name="T_DOC_COMMENT">     * Keep the old values if there are the same key in collections</token>
      </line>
      <line no="168">
        <token name="T_DOC_COMMENT">     * @param Collection $collection</token>
      </line>
      <line no="169">
        <token name="T_DOC_COMMENT">     * @return Collection</token>
      </line>
      <line no="170">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="171">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">push</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Collection</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$collection</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="172">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="173">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$collection</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAll</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$k</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$v</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="174">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">keyExists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$k</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="175">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$k</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$v</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="176">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="177">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="178"/>
      <line no="179">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="180">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="181"/>
      <line no="182">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="183">
        <token name="T_DOC_COMMENT">     * Push only values of the parameter collection in this collection</token>
      </line>
      <line no="184">
        <token name="T_DOC_COMMENT">     * Don't push keys of the parameter collection</token>
      </line>
      <line no="185">
        <token name="T_DOC_COMMENT">     * @param Collection $collection</token>
      </line>
      <line no="186">
        <token name="T_DOC_COMMENT">     * @return Collection</token>
      </line>
      <line no="187">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="188">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">pushOnlyValues</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Collection</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$collection</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="189">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="190">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$collection</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAll</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$k</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$v</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="191">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$v</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="192">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="193"/>
      <line no="194">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="195">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="196"/>
      <line no="197">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="198">
        <token name="T_DOC_COMMENT">     * Merge items of the collection with this collection</token>
      </line>
      <line no="199">
        <token name="T_DOC_COMMENT">     * Replace the old values by the new values if there are the same key in collections</token>
      </line>
      <line no="200">
        <token name="T_DOC_COMMENT">     * @param Collection $collection</token>
      </line>
      <line no="201">
        <token name="T_DOC_COMMENT">     * @return Collection</token>
      </line>
      <line no="202">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="203">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">merge</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Collection</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$collection</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="204">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="205">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$collection</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAll</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="206">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="207">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="208"/>
      <line no="209">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="210">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="211"/>
      <line no="212">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="213">
        <token name="T_DOC_COMMENT">     * Add a new value in the collection with or without key</token>
      </line>
      <line no="214">
        <token name="T_DOC_COMMENT">     * @param string|int $key</token>
      </line>
      <line no="215">
        <token name="T_DOC_COMMENT">     * @param mixed $value</token>
      </line>
      <line no="216">
        <token name="T_DOC_COMMENT">     * @return Collection</token>
      </line>
      <line no="217">
        <token name="T_DOC_COMMENT">     * @throws CollectionException</token>
      </line>
      <line no="218">
        <token name="T_DOC_COMMENT">     * @throws \AdrienM\Logger\LogException</token>
      </line>
      <line no="219">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="220">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">replace</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="221">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="222">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">keyExists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="223">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="224">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="225">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Register log</token>
      </line>
      <line no="226">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setLevel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Logger</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">LOG_ERROR</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="227">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">write</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">The key </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> does not exist in the collection. Code : </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CollectionException</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">KEY_INVALID</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="228"/>
      <line no="229">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CollectionException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">The key </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> does not exist in the collection.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CollectionException</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">KEY_INVALID</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="230">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="231"/>
      <line no="232">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="233">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="234"/>
      <line no="235">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="236">
        <token name="T_DOC_COMMENT">     * Get value of the collection with the key</token>
      </line>
      <line no="237">
        <token name="T_DOC_COMMENT">     * @param string|int $key</token>
      </line>
      <line no="238">
        <token name="T_DOC_COMMENT">     * @return mixed</token>
      </line>
      <line no="239">
        <token name="T_DOC_COMMENT">     * @throws CollectionException</token>
      </line>
      <line no="240">
        <token name="T_DOC_COMMENT">     * @throws \AdrienM\Logger\LogException</token>
      </line>
      <line no="241">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="242">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">get</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="243">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="244">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">keyExists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="245">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="246">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="247">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Register log</token>
      </line>
      <line no="248">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setLevel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Logger</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">LOG_ERROR</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="249">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">write</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">The key </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> does not exist in the collection. Code : </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CollectionException</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">KEY_INVALID</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="250"/>
      <line no="251">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CollectionException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">The key </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> does not exist in the collection.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CollectionException</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">KEY_INVALID</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="252">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="253">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="254"/>
      <line no="255">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="256">
        <token name="T_DOC_COMMENT">     * Get all items of the collection</token>
      </line>
      <line no="257">
        <token name="T_DOC_COMMENT">     * @return array&lt;mixed&gt;</token>
      </line>
      <line no="258">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="259">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getAll</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="260">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="261">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="262">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="263"/>
      <line no="264">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="265">
        <token name="T_DOC_COMMENT">     * Get the first item of the collection</token>
      </line>
      <line no="266">
        <token name="T_DOC_COMMENT">     * @return mixed|null</token>
      </line>
      <line no="267">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="268">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getFirst</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="269">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="270">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$items</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_slice</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="271"/>
      <line no="272">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$items</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$items</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="273">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="274"/>
      <line no="275">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="276">
        <token name="T_DOC_COMMENT">     * Get the last item of the collection</token>
      </line>
      <line no="277">
        <token name="T_DOC_COMMENT">     * @return mixed|null</token>
      </line>
      <line no="278">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="279">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getLast</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="280">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="281">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">end</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="282">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="283"/>
      <line no="284">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="285">
        <token name="T_DOC_COMMENT">     * Find the first item with callback</token>
      </line>
      <line no="286">
        <token name="T_DOC_COMMENT">     * @param callable $callback</token>
      </line>
      <line no="287">
        <token name="T_DOC_COMMENT">     * @return mixed|null</token>
      </line>
      <line no="288">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="289">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">find</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CALLABLE">callable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$callback</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="290">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="291">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="292">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$callback</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="293">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="294">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="295">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="296"/>
      <line no="297">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="298">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="299"/>
      <line no="300">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="301">
        <token name="T_DOC_COMMENT">     * Drop value by key or directly by value</token>
      </line>
      <line no="302">
        <token name="T_DOC_COMMENT">     * @param mixed $keyOrValue</token>
      </line>
      <line no="303">
        <token name="T_DOC_COMMENT">     * @return Collection</token>
      </line>
      <line no="304">
        <token name="T_DOC_COMMENT">     * @throws CollectionException</token>
      </line>
      <line no="305">
        <token name="T_DOC_COMMENT">     * @throws \AdrienM\Logger\LogException</token>
      </line>
      <line no="306">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="307">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">drop</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$keyOrValue</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="308">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="309">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">keyExists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$keyOrValue</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="310">
        <token name="T_WHITESPACE">            </token>
        <token name="T_UNSET">unset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$keyOrValue</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="311">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$keyOrValue</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="312"/>
      <line no="313">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="314">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$keyOrValue</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="315">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_UNSET">unset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="316">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="317">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="318"/>
      <line no="319">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="320">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Register log</token>
      </line>
      <line no="321">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setLevel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Logger</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">LOG_ERROR</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="322">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">write</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">The key </token>
        <token name="T_VARIABLE">$keyOrValue</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> does not exist in the collection. Code : </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CollectionException</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">KEY_INVALID</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="323"/>
      <line no="324">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CollectionException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">The key </token>
        <token name="T_VARIABLE">$keyOrValue</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> does not exist in the collection.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CollectionException</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">KEY_INVALID</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="325">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="326"/>
      <line no="327">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="328">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="329"/>
      <line no="330">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="331">
        <token name="T_DOC_COMMENT">     * Erase a part of the collection</token>
      </line>
      <line no="332">
        <token name="T_DOC_COMMENT">     * @param int $start</token>
      </line>
      <line no="333">
        <token name="T_DOC_COMMENT">     * @param null|int $length</token>
      </line>
      <line no="334">
        <token name="T_DOC_COMMENT">     * @return Collection</token>
      </line>
      <line no="335">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="336">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">slice</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$start</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$length</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="337">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="338">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_slice</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$start</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$length</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="339"/>
      <line no="340">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="341">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="342"/>
      <line no="343">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="344">
        <token name="T_DOC_COMMENT">     * Reset collection</token>
      </line>
      <line no="345">
        <token name="T_DOC_COMMENT">     * @return Collection</token>
      </line>
      <line no="346">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="347">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">purge</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="348">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="349">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="350"/>
      <line no="351">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="352">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="353"/>
      <line no="354">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="355">
        <token name="T_DOC_COMMENT">     * Reverse the collection items</token>
      </line>
      <line no="356">
        <token name="T_DOC_COMMENT">     * Return a copy of this collection with reversed items</token>
      </line>
      <line no="357">
        <token name="T_DOC_COMMENT">     * @return Collection</token>
      </line>
      <line no="358">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="359">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">reverse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="360">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="361">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">from</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_reverse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="362">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="363"/>
      <line no="364">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="365">
        <token name="T_DOC_COMMENT">     * Map the collection items</token>
      </line>
      <line no="366">
        <token name="T_DOC_COMMENT">     * Return a copy of this collection with results of the callback</token>
      </line>
      <line no="367">
        <token name="T_DOC_COMMENT">     * @param callable $callback</token>
      </line>
      <line no="368">
        <token name="T_DOC_COMMENT">     * @return Collection</token>
      </line>
      <line no="369">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="370">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">map</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CALLABLE">callable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$callback</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="371">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="372">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$keys</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_keys</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="373"/>
      <line no="374">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$items</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_map</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$callback</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$keys</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="375"/>
      <line no="376">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">from</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_combine</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$keys</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$items</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="377">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="378"/>
      <line no="379">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="380">
        <token name="T_DOC_COMMENT">     * Filter on the collection items</token>
      </line>
      <line no="381">
        <token name="T_DOC_COMMENT">     * Return a copy of this collection with filtered items</token>
      </line>
      <line no="382">
        <token name="T_DOC_COMMENT">     * @param callable $callback</token>
      </line>
      <line no="383">
        <token name="T_DOC_COMMENT">     * @return Collection</token>
      </line>
      <line no="384">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="385">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">filter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CALLABLE">callable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$callback</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
      </line>
      <line no="386">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="387">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$items</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_filter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">items</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$callback</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="388"/>
      <line no="389">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">from</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$items</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="390">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="391"/>
      <line no="392">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="393">
        <token name="T_DOC_COMMENT">     * Call a method with the alias</token>
      </line>
      <line no="394">
        <token name="T_DOC_COMMENT">     * @param string $name</token>
      </line>
      <line no="395">
        <token name="T_DOC_COMMENT">     * @param array&lt;mixed&gt; $args</token>
      </line>
      <line no="396">
        <token name="T_DOC_COMMENT">     * @return mixed</token>
      </line>
      <line no="397">
        <token name="T_DOC_COMMENT">     * @throws CollectionException</token>
      </line>
      <line no="398">
        <token name="T_DOC_COMMENT">     * @throws \AdrienM\Logger\LogException</token>
      </line>
      <line no="399">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="400">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__call</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$args</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="401">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="402">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">array_key_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">alias</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="403">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">call_user_func_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">alias</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$args</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="404">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="405"/>
      <line no="406">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Register log</token>
      </line>
      <line no="407">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setLevel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Logger</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">LOG_ERROR</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="408">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">write</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">Method or alias </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> does not exist. Code : </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CollectionException</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">METHOD_DOES_NOT_EXIST</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="409"/>
      <line no="410">
        <token name="T_WHITESPACE">        </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CollectionException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">Method or alias </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> does not exist.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CollectionException</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">METHOD_DOES_NOT_EXIST</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="411">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="412">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="413"/>
    </source>
  </file>
</phpunit>
